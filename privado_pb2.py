# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: privado.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rprivado.proto\x12\x07privado\"&\n\x04User\x12\x10\n\x08username\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\"\x1f\n\x0bUserRequest\x12\x10\n\x08username\x18\x01 \x01(\t\"\x1c\n\x0cUserResponse\x12\x0c\n\x04port\x18\x01 \x01(\t\"=\n\x07Message\x12\x0e\n\x06sender\x18\x01 \x01(\t\x12\x11\n\trecipient\x18\x02 \x01(\t\x12\x0f\n\x07\x63ontent\x18\x03 \x01(\t\"\x1b\n\x08Response\x12\x0f\n\x07message\x18\x01 \x01(\t2\xb2\x01\n\x0ePrivadoService\x12\x30\n\x0cRegisterUser\x12\r.privado.User\x1a\x11.privado.Response\x12:\n\x0bGetUserPort\x12\x14.privado.UserRequest\x1a\x15.privado.UserResponse\x12\x32\n\x0bSendMessage\x12\x10.privado.Message\x1a\x11.privado.Responseb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'privado_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None
  _globals['_USER']._serialized_start=26
  _globals['_USER']._serialized_end=64
  _globals['_USERREQUEST']._serialized_start=66
  _globals['_USERREQUEST']._serialized_end=97
  _globals['_USERRESPONSE']._serialized_start=99
  _globals['_USERRESPONSE']._serialized_end=127
  _globals['_MESSAGE']._serialized_start=129
  _globals['_MESSAGE']._serialized_end=190
  _globals['_RESPONSE']._serialized_start=192
  _globals['_RESPONSE']._serialized_end=219
  _globals['_PRIVADOSERVICE']._serialized_start=222
  _globals['_PRIVADOSERVICE']._serialized_end=400
# @@protoc_insertion_point(module_scope)
